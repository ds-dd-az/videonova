{"version":3,"file":"static/js/92.f0a77b7d.chunk.js","mappings":"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","sources":["components/ui/popup/popup.jsx","containers/close-form-button/close-form-button.jsx","components/ui/forms/forms.jsx","components/ui/input-field/eye-toggle/eye-toggle.jsx","components/ui/input-field/input-field.jsx","components/ui/error-message/error-message.jsx","containers/error-message-cont/form-error.jsx","components/ui/forms/add-new-video/add-new-video.jsx","containers/form-logical-wrappers/add-new-video-logic.jsx","external_func/add-video/add-video.js","components/ui/forms/sign-in-form/sign-in-form.jsx","external_func/sign-in-form/signin-functions.js","external_func/switch-form/form-switcher.jsx","components/ui/forms/x-icon/x-icon.jsx","containers/form-logical-wrappers/sign-in-logic.jsx","external_func/sign-up-form/signup-functions.js","components/ui/forms/sign-up-form/sign-up-form.jsx","containers/form-logical-wrappers/sign-up-logic.jsx","assets/icons/check-icon.svg","components/ui/forms/add-new-video_added/video-added.jsx","containers/form-logical-wrappers/video-added-logic.jsx","containers/form-logical-wrappers/formHandler.jsx","containers/popup-logical-cont/popup-logic.jsx","external_func/find-preview-src/find-preview-src.js"],"sourcesContent":["import React from \"react\"\nimport \"../../../styles/popup/popup.css\"\nimport propTypes from \"prop-types\"\n\n/**\n * Popup component\n * @param children - node, components in the popup\n * @param isVisible - bool, determines popup`s visibility\n * @returns node, visible or invisible popup components\n */\nexport default function Popup(props) {\n  const { children, isVisible } = props\n  Popup.propTypes = {\n    /**\n     * components in the popup\n     */\n    children: propTypes.node,\n    /**\n     * determines popup`s visibility\n     */\n    isVisible: propTypes.bool.isRequired,\n  }\n\n  Popup.defaultProps = {\n    children: null,\n  }\n  const style = isVisible ? \"popup_show\" : \"popup_hide\"\n  return <div className={`popup ${style}`}>{children}</div>\n}\n","import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport propTypes from \"prop-types\"\nimport { closeForm } from \"../../external_func/dispatches/dispatches\"\n\n/**\n * Form closing container\n *\n * this uses useDispatch hook\n * @param children - node, component that will be wrapped by this, button or anything else\n * @returns node, component with form closing functionality\n */\nexport default function CloseFormButton(props) {\n  const { children } = props\n  const dispatch = useDispatch()\n  const close = () => closeForm(dispatch)\n  return (\n    <div role=\"button\" onClick={close} tabIndex={0} onKeyDown={close}>\n      {children}\n    </div>\n  )\n}\n\nCloseFormButton.propTypes = {\n  children: propTypes.node.isRequired,\n}\n","import React from \"react\"\nimport propTypes from \"prop-types\"\nimport \"../../../styles/forms\"\n\n/**\n * Form wrapper component\n * @param children - form component that need to be wrapped\n * @returns form component with wrapper\n */\nexport default function Form(props) {\n  const { children } = props\n  Form.propTypes = {\n    /**\n     * form that need to be wrapped\n     */\n    children: propTypes.node.isRequired,\n  }\n  return (\n    <div id=\"formId\" className=\"form-wrapper\">\n      {children}\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport propTypes from \"prop-types\"\nimport Regular from \"../../../../assets/icons/eye-icon.png\"\nimport Crossed from \"../../../../assets/icons/crossed-eye-icon.png\"\n\nexport default function EyeToggle(props) {\n  const { click } = props\n  EyeToggle.propTypes = {\n    /**\n     * onclick function, preferably should be the one that changes text visibility\n     */\n    click: propTypes.func.isRequired,\n  }\n\n  const [crossed, setCrossed] = useState(false)\n  const icon = crossed ? Crossed : Regular\n  function toggle() {\n    setCrossed(!crossed)\n    click()\n  }\n  const classNames = crossed ? \"eye-icon eye-icon_crossed\" : \"eye-icon\"\n  return (\n    <div\n      className={classNames}\n      onClick={() => toggle()}\n      onKeyDown={() => toggle()}\n      tabIndex=\"0\"\n      role=\"button\"\n    >\n      <img src={icon} alt=\"\" />\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport propTypes from \"prop-types\"\nimport EyeToggle from \"./eye-toggle/eye-toggle\"\n\n/**\n * Input Field component\n * @param placeholder - string, default text on input field\n * @param error - bool, turns error effect on by highlighting field with red border\n * @param id - string, id of the component\n * @param variant - possible values: \"password\", \"smallText\", \"bigText\" - returns input field of mentioned variant\n * @returns Input field with specified parameters\n */\nexport default function InputField(props) {\n  const { placeholder, error, id, variant } = props\n  const [input, setInput] = useState(\"\")\n  InputField.propTypes = {\n    /**\n     * default text on input field\n     */\n    placeholder: propTypes.string,\n    /**\n     * id of the component\n     */\n    id: propTypes.string.isRequired,\n    /**\n     *  turns error effect on\n     */\n    error: propTypes.bool,\n    /**\n     * variant of input field\n     */\n    variant: propTypes.oneOf([\"password\", \"smallText\", \"bigText\"]).isRequired,\n  }\n  InputField.defaultProps = {\n    placeholder: \"insert text please\",\n    error: false,\n  }\n\n  const [hiding, setHiding] = useState(true)\n  const changeHide = () => {\n    setHiding(!hiding)\n  }\n  const type = hiding && variant === \"password\" ? \"password\" : \"text\"\n  const styles = [\"field\"]\n  if (error) {\n    styles.push(\"field_red\")\n  }\n  if (variant === \"bigText\") {\n    styles.push(\"field_big\")\n    return (\n      <div className=\"field-wrapper\">\n        <textarea\n          id={id}\n          value={input}\n          onInput={(e) => setInput(e.target.value)}\n          maxLength={445}\n          className={styles.join(\" \")}\n          placeholder={placeholder}\n        />\n      </div>\n    )\n  }\n  return (\n    <div className=\"field-wrapper\">\n      <input\n        value={input}\n        onInput={(e) => setInput(e.target.value)}\n        id={id}\n        className={styles.join(\" \")}\n        type={type}\n        placeholder={placeholder}\n      />\n      {variant === \"password\" ? <EyeToggle click={changeHide} /> : null}\n    </div>\n  )\n}\n","import React from \"react\"\nimport \"../../../styles/error-message/error-message.css\"\nimport propTypes from \"prop-types\"\n\n/**\n * Error message for forms\n * @param message - string, message that needs to be displayed\n * @returns node, component with passed message\n */\nexport default function ErrorMessage(props) {\n  const { message } = props\n  ErrorMessage.propTypes = {\n    /**\n     * error message that will be displayed\n     */\n    message: propTypes.string.isRequired,\n  }\n  return <h3 className=\"error-message\">{message}</h3>\n}\n","import React from \"react\"\nimport propTypes from \"prop-types\"\nimport ErrorMessage from \"../../components/ui/error-message/error-message\"\n\n/**\n * Form error logical wrapper\n * @param message - message that will be displayed\n * @returns null or node, depending on message value\n */\nexport default function FormError(props) {\n  const { message } = props\n  FormError.propTypes = {\n    /**\n     * message that will be displayed\n     */\n    message: propTypes.string,\n  }\n\n  FormError.defaultProps = {\n    message: null,\n  }\n  if (message !== null) {\n    return <ErrorMessage message={message} />\n  }\n  return null\n}\n","import React from \"react\"\nimport propTypes from \"prop-types\"\nimport InputField from \"../../input-field/input-field\"\nimport Button from \"../../button/button\"\nimport FormError from \"../../../../containers/error-message-cont/form-error\"\nimport Heading from \"../../headings/headings\"\n\n/**\n * Form component for adding video\n * @param submitFunc - function performed on submit\n * @param errorMessage - string, error message that will be displayed when error is occured\n * @param formCloser - node, component with closing function\n * @returns node, \"add video\" form component\n */\nexport default function VideoForm(props) {\n  const { submitFunc, errorMessage, formCloser } = props\n  VideoForm.propTypes = {\n    /**\n     * function performed on submit\n     */\n    submitFunc: propTypes.func,\n    /**\n     * error message that will be displayed when error is occured\n     */\n    errorMessage: propTypes.string,\n    /**\n     * component with closing function\n     */\n    formCloser: propTypes.node,\n  }\n  VideoForm.defaultProps = {\n    submitFunc: null,\n    errorMessage: null,\n    formCloser: <Button text=\"Cancel\" secondary />,\n  }\n\n  return (\n    <div className=\"add-new-video-form\">\n      <Heading size={1}>\n        Add <span>New</span> Video\n      </Heading>\n      <FormError message={errorMessage} />\n      <form>\n        <label htmlFor=\"videoLink\">\n          <Heading size={3}>Youtube Link</Heading>\n          <InputField\n            variant=\"smallText\"\n            id=\"videoLink\"\n            placeholder=\"Past link...\"\n          />\n        </label>\n        <label htmlFor=\"videoName\">\n          <Heading size={3}>Name of video</Heading>\n          <InputField\n            variant=\"smallText\"\n            id=\"videoName\"\n            placeholder=\"Type name...\"\n          />\n        </label>\n        <label htmlFor=\"videoDesc\">\n          <Heading size={3}>Description</Heading>\n          <InputField\n            id=\"videoDesc\"\n            variant=\"bigText\"\n            placeholder=\"Type description...\"\n          />\n        </label>\n        <div className=\"add-new-video-form__buttons\">\n          {formCloser}\n          <Button text=\"Submit\" click={submitFunc} />\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Form from \"../../components/ui/forms/forms\"\nimport addNewVideo from \"../../external_func/add-video/add-video\"\nimport VideoForm from \"../../components/ui/forms/add-new-video/add-new-video\"\nimport { SelectErrorMessage } from \"../../modules/current_error\"\nimport CloseFormButton from \"../close-form-button/close-form-button\"\nimport Button from \"../../components/ui/button/button\"\n\n/**\n * Logical wrapper for addVideo form\n *\n * used for passing props to the form also contains form closing button\n * @returns node, addVideo form with enabled functionality\n */\nexport default function AddVideoWithLogic() {\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(SelectErrorMessage)\n  const addVideo = () => {\n    const linkField = document.getElementById(\"videoLink\")\n    const nameField = document.getElementById(\"videoName\")\n    const descField = document.getElementById(\"videoDesc\")\n    addNewVideo(dispatch, linkField.value, nameField.value, descField.value)\n  }\n  return (\n    <Form>\n      <VideoForm\n        submitFunc={addVideo}\n        errorMessage={errorMessage}\n        formCloser={\n          <CloseFormButton>\n            <Button text=\"Cancel\" secondary />\n          </CloseFormButton>\n        }\n      />\n    </Form>\n  )\n}\n","import { unwrapResult } from \"@reduxjs/toolkit\"\nimport { addVideo, fetchVideos } from \"../../modules/userdata\"\nimport findPreview from \"../find-preview-src/find-preview-src\"\n\n/**\n * Add new video function\n *\n * Dispatches addVideo redux thunk, unwraps its result and if succesfull opens \"video added\" message component,\n * if not it will display an error message inside of the form\n * @param dispatch - useDispatch hook\n * @param url - video's url\n * @param title - title of video that will be displayed on the thumbnail\n * @param description - video's description for thumbnail\n * @param token - user's auth token used for post request\n */\nexport default function addNewVideo(dispatch, url, title, description, token) {\n  dispatch(\n    addVideo({\n      url,\n      title,\n      description,\n      token,\n    })\n  )\n    .then(unwrapResult)\n    .then(() => {\n      dispatch({\n        type: \"form/hide\",\n      })\n      dispatch({\n        type: \"errors/cleanError\",\n      })\n      dispatch(fetchVideos())\n      dispatch({\n        type: \"form/show\",\n        payload: {\n          type: \"videoAdded\",\n          img: `${findPreview(url)}`,\n        },\n      })\n    })\n    .catch((error) => {\n      if (error.message === \"Request failed with status code 403\") {\n        dispatch({\n          type: \"errors/addNameError\",\n          payload:\n            \"There is a trouble with your authentification, please try to login again\",\n        })\n      } else {\n        dispatch({\n          type: \"errors/addError\",\n          payload: \"Unexpected error ocurred, try again later\",\n        })\n      }\n    })\n}\n","import React from \"react\"\nimport propTypes from \"prop-types\"\nimport InputField from \"../../input-field/input-field\"\nimport Button from \"../../button/button\"\nimport FormError from \"../../../../containers/error-message-cont/form-error\"\nimport Heading from \"../../headings/headings\"\n\n/**\n * Sign in form component\n * @param submitFunc - function performed on submit\n * @param errorMessage - string, error message that will be displayed when error is occured\n * @param passwordError - bool, highlights password field if true\n * @param nameError - bool, highlights name field if true\n * @param loading - bool, displays loading spinner in button if true\n * @param formSwitcher - node, form switcher component\n * @returns node, sign in form component\n */\nexport default function SignIn(props) {\n  const {\n    submitFunc,\n    errorMessage,\n    passwordError,\n    nameError,\n    loading,\n    formSwitcher,\n  } = props\n  SignIn.propTypes = {\n    /**\n     * function performed on submit\n     */\n    submitFunc: propTypes.func,\n    /**\n     * error message that will be displayed when error is occured\n     */\n    errorMessage: propTypes.string,\n    /**\n     * highlights password field if true\n     */\n    passwordError: propTypes.bool,\n    /**\n     * highlights name field if true\n     */\n    nameError: propTypes.bool,\n    /**\n     * displays loading spinner in button if true\n     */\n    loading: propTypes.bool,\n    /**\n     * form switcher component\n     */\n    formSwitcher: propTypes.node,\n  }\n  SignIn.defaultProps = {\n    submitFunc: null,\n    errorMessage: null,\n    passwordError: false,\n    nameError: false,\n    loading: false,\n    formSwitcher: null,\n  }\n\n  return (\n    <div className=\"sign-in-form\">\n      <Heading size={1}>\n        Sign <span>In</span>\n      </Heading>\n      <FormError message={errorMessage} />\n      <form>\n        <label htmlFor=\"name\">\n          <Heading size={3}>Name</Heading>\n          <InputField\n            error={nameError}\n            variant=\"smallText\"\n            id=\"name\"\n            placeholder=\"Type name...\"\n          />\n        </label>\n        <label htmlFor=\"password\">\n          <Heading size={3}>Password</Heading>\n          <InputField\n            error={passwordError}\n            id=\"password\"\n            variant=\"password\"\n            placeholder=\"Type password...\"\n          />\n        </label>\n        <Button text=\"Sign In\" click={submitFunc} loading={loading} />\n        {formSwitcher}\n      </form>\n    </div>\n  )\n}\n","import { unwrapResult } from \"@reduxjs/toolkit\"\nimport { login } from \"../../modules/userdata\"\nimport { closeForm } from \"../dispatches/dispatches\"\n\n/**\n * signIn Function\n *\n * Dispatches redux thunk, unwraps its result and if succesfull it just closes the form and new user is already posted on the server,\n * if not displays error message inside of the form\n * @param dispatch - useDispatch hook\n * @param userName - string, user's name\n * @param userPassword - string, user's password\n */\nexport default function signInFunc(dispatch, userName, userPassword) {\n  dispatch(\n    login({\n      username: userName,\n      password: userPassword,\n    })\n  )\n    .then(unwrapResult)\n    .then(() => {\n      closeForm(dispatch)\n      dispatch({\n        type: \"errors/cleanError\",\n      })\n    })\n    .catch((error) => {\n      if (error.message === \"Request failed with status code 404\") {\n        dispatch({\n          type: \"errors/addPasswordError\",\n        })\n        dispatch({\n          type: \"errors/addNameError\",\n          payload: \"Password or name is written incorrectly\",\n        })\n      } else {\n        dispatch({\n          type: \"errors/addError\",\n          payload: \"Unexpected error ocurred, try again later\",\n        })\n      }\n    })\n}\n","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectType } from \"../../modules/form\"\n\n/**\n * Form switcher container component\n *\n * reads current form type from state and dispatches closing and reopening of the other form type,\n * if signIn opened it will close it and open signUp form\n * @returns node, clickable span with blue text in it\n */\nexport default function FormSwitcher() {\n  const dispatch = useDispatch()\n  const formType = useSelector(selectType)\n  let switchFunction\n  let text\n  function switchToSignIn() {\n    dispatch({\n      type: \"form/hide\",\n    })\n    dispatch({\n      type: \"form/show\",\n      payload: { type: \"signIn\" },\n    })\n  }\n  function switchToSignUp() {\n    dispatch({\n      type: \"form/hide\",\n    })\n    dispatch({\n      type: \"form/show\",\n      payload: { type: \"signUp\" },\n    })\n  }\n  if (formType === \"signUp\") {\n    text = \"Sign in\"\n    switchFunction = switchToSignIn\n  }\n  if (formType === \"signIn\") {\n    text = \"Sign up\"\n    switchFunction = switchToSignUp\n  }\n\n  return (\n    <span\n      style={{ color: \"blue\", cursor: \"pointer\" }}\n      onClick={switchFunction}\n      tabIndex={0}\n      role=\"button\"\n      onKeyDown={switchFunction}\n    >\n      {text}\n    </span>\n  )\n}\n","import React from \"react\"\nimport Icon from \"../../../../assets/icons/close-form.png\"\n\n/**\n * An icon shaped like x component\n * @returns node\n */\nexport default function XIcon() {\n  return (\n    <div className=\"x-icon\">\n      <img src={Icon} alt=\"close\" />\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  SelectErrorMessage,\n  SelectPasswordError,\n  SelectNameError,\n} from \"../../modules/current_error\"\nimport Form from \"../../components/ui/forms/forms\"\nimport { SelectLoginLoading } from \"../../modules/userdata\"\nimport SignIn from \"../../components/ui/forms/sign-in-form/sign-in-form\"\nimport signInFunc from \"../../external_func/sign-in-form/signin-functions\"\nimport FormSwitcher from \"../../external_func/switch-form/form-switcher\"\nimport CloseFormButton from \"../close-form-button/close-form-button\"\nimport XIcon from \"../../components/ui/forms/x-icon/x-icon\"\n\n/**\n * Logical wrapper for sign In form\n *\n * reads state, passes props to the form also contains form closing button\n * @returns node, signIn form with enabled functionality\n */\nexport default function SignInFormWithLogic() {\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(SelectErrorMessage)\n  const passwordError = useSelector(SelectPasswordError)\n  const nameError = useSelector(SelectNameError)\n  const loading = useSelector(SelectLoginLoading)\n\n  const login = () => {\n    const nameField = document.getElementById(\"name\")\n    const passwordField = document.getElementById(\"password\")\n    signInFunc(dispatch, nameField.value, passwordField.value)\n  }\n\n  return (\n    <Form>\n      <CloseFormButton>\n        <XIcon />\n      </CloseFormButton>\n      <SignIn\n        submitFunc={login}\n        errorMessage={errorMessage}\n        passwordError={passwordError}\n        nameError={nameError}\n        loading={loading}\n        formSwitcher={\n          <span>\n            Don`t have account? <FormSwitcher />\n          </span>\n        }\n      />\n    </Form>\n  )\n}\n","import { unwrapResult } from \"@reduxjs/toolkit\"\nimport { registerUser, fetchUsers } from \"../../modules/userdata\"\nimport { closeForm, logOut } from \"../dispatches/dispatches\"\nimport signInFunc from \"../sign-in-form/signin-functions\"\n\nfunction register(dispatch, userName, userPassword) {\n  dispatch(\n    registerUser({\n      username: userName,\n      password: userPassword,\n    })\n  )\n    .then(unwrapResult)\n    .then(() => {\n      logOut(dispatch)\n      dispatch(fetchUsers())\n      signInFunc(dispatch, userName, userPassword)\n      closeForm(dispatch)\n    })\n    .catch((error) => {\n      if (error.message === \"Request failed with status code 409\") {\n        dispatch({\n          type: \"errors/addNameError\",\n          payload: \"This name is already taken or you have already registered\",\n        })\n      } else {\n        dispatch({\n          type: \"errors/addError\",\n          payload: \"Unexpected error ocurred, try again later\",\n        })\n      }\n    })\n}\n/**\n * user signUp function\n *\n * Checks user's name for its length(must be at least 4 symbols long),\n * also checks if password is long enough and if it is identical with \"repeat password\" field's content,\n * if all checks are passed it will execute registration function which dispatches redux thunk with http request\n * and unwraps its result\n *\n * @param dispatch - useDispatch hook, needs to be passed down to the registration function, which dispatches a thunk\n * @param name - user's name, also goes to the dispatching function if all checks are passed\n * @param password - users desireable password\n * @param repeatPassword - repeat password field value, needed for checks\n */\nexport default function signUp(dispatch, name, password, repeatPassword) {\n  dispatch({\n    type: \"errors/clearError\",\n  })\n  if (password.length < 8) {\n    dispatch({\n      type: \"errors/addPasswordError\",\n      payload: \"Password must be at least eight symbols long\",\n    })\n  } else if (password !== repeatPassword) {\n    dispatch({\n      type: \"errors/addPasswordError\",\n      payload: \"Passwords must be indentical\",\n    })\n  } else if (name.length < 4) {\n    dispatch({\n      type: \"errors/addNameError\",\n      payload: \"Name must be at least four symbols long\",\n    })\n  } else register(dispatch, name, password)\n}\n","import React from \"react\"\nimport propTypes from \"prop-types\"\nimport InputField from \"../../input-field/input-field\"\nimport FormError from \"../../../../containers/error-message-cont/form-error\"\nimport Button from \"../../button/button\"\nimport Heading from \"../../headings/headings\"\n\n/**\n * Sign up form component\n * @param submitFunc - function performed on submit\n * @param errorMessage - string, error message that will be displayed when error is occured\n * @param passwordError - bool, highlights password field if true\n * @param nameError - bool, highlights name field if true\n * @param loading - bool, displays loading spinner in button if true\n * @param formSwitcher - node, form switcher component\n * @returns node, sign up form component\n */\nexport default function SignUp(props) {\n  const {\n    submitFunc,\n    errorMessage,\n    passwordError,\n    nameError,\n    loading,\n    formSwitcher,\n  } = props\n\n  SignUp.propTypes = {\n    /**\n     * function that will be executed on submit\n     */\n    submitFunc: propTypes.func,\n    /**\n     * error message that will be displayed when error is occured\n     */\n    errorMessage: propTypes.string,\n    /**\n     * highlights password field when there is an error\n     */\n    passwordError: propTypes.bool,\n    /**\n     * highlights name field when there is an error\n     */\n    nameError: propTypes.bool,\n    /**\n     * displays loading spinner in the button while request is loading\n     */\n    loading: propTypes.bool,\n    /**\n     * formSwitcher component\n     */\n    formSwitcher: propTypes.node,\n  }\n\n  SignUp.defaultProps = {\n    submitFunc: null,\n    errorMessage: null,\n    passwordError: false,\n    nameError: false,\n    loading: false,\n    formSwitcher: null,\n  }\n\n  return (\n    <div className=\"sign-up-form\">\n      <Heading size={1}>\n        Sign <span>Up</span>\n      </Heading>\n      <FormError message={errorMessage} />\n      <form>\n        <label htmlFor=\"name\">\n          <Heading size={3}>Name</Heading>\n          <InputField\n            variant=\"smallText\"\n            id=\"name\"\n            error={nameError}\n            placeholder=\"Type name...\"\n          />\n        </label>\n        <label htmlFor=\"password\">\n          <Heading size={3}>Password</Heading>\n          <InputField\n            variant=\"password\"\n            id=\"password\"\n            error={passwordError}\n            placeholder=\"Type password...\"\n          />\n        </label>\n        <label htmlFor=\"repeatPassword\">\n          <Heading size={3}>Repeat Password</Heading>\n          <InputField\n            variant=\"password\"\n            id=\"repeatPassword\"\n            error={passwordError}\n            placeholder=\"Repeat password...\"\n          />\n        </label>\n        <Button text=\"Sign up\" loading={loading} click={submitFunc} />\n        {formSwitcher}\n      </form>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  SelectNameError,\n  SelectPasswordError,\n  SelectErrorMessage,\n} from \"../../modules/current_error\"\nimport signUp from \"../../external_func/sign-up-form/signup-functions\"\nimport { SelectLoginLoading } from \"../../modules/userdata\"\nimport Form from \"../../components/ui/forms/forms\"\nimport CloseFormButton from \"../close-form-button/close-form-button\"\nimport XIcon from \"../../components/ui/forms/x-icon/x-icon\"\nimport SignUp from \"../../components/ui/forms/sign-up-form/sign-up-form\"\nimport FormSwitcher from \"../../external_func/switch-form/form-switcher\"\n\n/**\n * Logical wrapper for sign Up form\n *\n * reads state, passes props to the form also contains form closing button\n * @returns node, sign up form with enabled functionality\n */\nexport default function SignUpFormWithLogic() {\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(SelectErrorMessage)\n  const passwordError = useSelector(SelectPasswordError)\n  const nameError = useSelector(SelectNameError)\n  const register = () => {\n    const nameField = document.getElementById(\"name\")\n    const passwordField = document.getElementById(\"password\")\n    const confirmPassField = document.getElementById(\"repeatPassword\")\n    signUp(\n      dispatch,\n      nameField.value,\n      passwordField.value,\n      confirmPassField.value\n    )\n  }\n  const registrationLoading = useSelector(SelectLoginLoading)\n\n  return (\n    <Form>\n      <CloseFormButton>\n        <XIcon />\n      </CloseFormButton>\n      <SignUp\n        submitFunc={register}\n        errorMessage={errorMessage}\n        passwordError={passwordError}\n        nameError={nameError}\n        loading={registrationLoading}\n        formSwitcher={\n          <span>\n            Already have an account? <FormSwitcher />\n          </span>\n        }\n      />\n    </Form>\n  )\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCheckIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 58,\n    height: 57,\n    viewBox: \"0 0 58 57\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.5 24.6188L27.2543 48L52.5 5\",\n    stroke: \"white\",\n    strokeWidth: 10,\n    strokeLinecap: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckIcon);\nexport default __webpack_public_path__ + \"static/media/check-icon.342dc32c03d28edc2e96f6c89d6952c0.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\"\nimport propTypes from \"prop-types\"\nimport CheckIcon from \"../../../../assets/icons/check-icon.svg\"\nimport Heading from \"../../headings/headings\"\n\n/**\n * Video added message component displayed after adding video in videoform\n * @param img - string, source of preview image of added video\n * @param formCloser - node, component with closing function\n * @returns node, video added message component\n */\nexport default function VideoAddedMessage(props) {\n  const { img, formCloser } = props\n  VideoAddedMessage.propTypes = {\n    /**\n     * source of preview image of added video\n     */\n    img: propTypes.string,\n    /**\n     * component with closing function\n     */\n    formCloser: propTypes.node,\n  }\n  VideoAddedMessage.defaultProps = {\n    img: \"https://picsum.photos/400/200\",\n    formCloser: null,\n  }\n  return (\n    <div className=\"video-added\">\n      <Heading size={1}>\n        Add <span>New</span> Video\n      </Heading>\n      <div>\n        <div className=\"vid-preview\">\n          <div className=\"vid-preview__shadow\" />\n          <img src={`${img}`} className=\"vid-preview__image\" alt=\"prev\" />\n          <img src={CheckIcon} className=\"vid-preview__check-icon\" alt=\"done\" />\n        </div>\n        <Heading size={2}>Succesfull</Heading>\n        {formCloser}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport Button from \"../../components/ui/button/button\"\nimport VideoAddedMessage from \"../../components/ui/forms/add-new-video_added/video-added\"\nimport { selectImg } from \"../../modules/form\"\nimport CloseFormButton from \"../close-form-button/close-form-button\"\nimport Form from \"../../components/ui/forms/forms\"\n\n/**\n * Logical wrapper for \"video added\" message\n *\n * reads state passes preview image to the message also contains form closing button\n * @returns node, \"video added\" message with enabled functionality\n */\nexport default function VideoAddedMessageWithLogic() {\n  const previewImage = useSelector(selectImg)\n\n  return (\n    <Form>\n      <VideoAddedMessage\n        img={previewImage}\n        formCloser={\n          <CloseFormButton>\n            <Button text=\"To Video\" />\n          </CloseFormButton>\n        }\n      />\n    </Form>\n  )\n}\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { selectType } from \"../../modules/form\"\nimport AddVideoWithLogic from \"./add-new-video-logic\"\nimport SignInFormWithLogic from \"./sign-in-logic\"\nimport SignUpFormWithLogic from \"./sign-up-logic\"\nimport VideoAddedMessageWithLogic from \"./video-added-logic\"\n\n/**\n * FormHandler component, reads forms state and opens requested form\n * @returns node, requested form with enabled functionality\n */\nexport default function FormHandler() {\n  const formType = useSelector(selectType)\n\n  if (formType === \"signIn\") {\n    return <SignInFormWithLogic />\n  }\n  if (formType === \"signUp\") {\n    return <SignUpFormWithLogic />\n  }\n  if (formType === \"addVideo\") {\n    return <AddVideoWithLogic />\n  }\n  if (formType === \"videoAdded\") {\n    return <VideoAddedMessageWithLogic />\n  }\n}\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport Popup from \"../../components/ui/popup/popup\"\nimport { selectVisibility } from \"../../modules/form\"\nimport CloseFormButton from \"../close-form-button/close-form-button\"\nimport FormHandler from \"../form-logical-wrappers/formHandler\"\n\n/**\n * Popup logical wrapper\n *\n * Works with state\n * @returns node, popup with blurred background and form handler\n */\nexport default function PopupWithLogic() {\n  const visibility = useSelector(selectVisibility)\n\n  return (\n    <Popup isVisible={visibility}>\n      <CloseFormButton>\n        <div className=\"bgBlur\" />\n      </CloseFormButton>\n      <FormHandler />\n    </Popup>\n  )\n}\n","/**\n * FindPreview function\n *\n * finds id part of youtube link and returns preview source url\n * @param url - string, original url of the video\n * @returns string, source link of the preview image\n */\nexport default function findPreview(url) {\n  let videoId\n  if (url.includes(\"youtu.be\")) {\n    videoId = [url.split(\"youtu.be/\")[1]]\n  } else if (url.includes(\"embed/\")) {\n    videoId = [url.split(\"embed/\")[1]]\n  } else {\n    videoId = [url.split(\"v=\")[1]]\n    if (videoId.includes(\"&\")) {\n      const ampersandPosition = videoId.indexOf(\"&\")\n      videoId = videoId.substring(0, ampersandPosition)\n    }\n  }\n  const source = `https://img.youtube.com/vi/${videoId}/0.jpg`\n  return source\n}\n"],"names":["Popup","props","children","isVisible","defaultProps","style","className","CloseFormButton","dispatch","useDispatch","close","closeForm","role","onClick","tabIndex","onKeyDown","Form","id","EyeToggle","click","useState","crossed","setCrossed","icon","toggle","classNames","src","alt","InputField","placeholder","error","variant","input","setInput","hiding","setHiding","type","styles","push","value","onInput","e","target","maxLength","join","ErrorMessage","message","FormError","VideoForm","submitFunc","errorMessage","formCloser","text","secondary","size","htmlFor","AddVideoWithLogic","useSelector","SelectErrorMessage","linkField","document","getElementById","nameField","descField","url","title","description","token","addVideo","then","unwrapResult","fetchVideos","payload","img","findPreview","catch","addNewVideo","SignIn","passwordError","nameError","loading","formSwitcher","signInFunc","userName","userPassword","login","username","password","FormSwitcher","switchFunction","formType","selectType","color","cursor","XIcon","SignInFormWithLogic","SelectPasswordError","SelectNameError","SelectLoginLoading","passwordField","signUp","name","repeatPassword","length","registerUser","logOut","fetchUsers","register","SignUp","SignUpFormWithLogic","registrationLoading","confirmPassField","VideoAddedMessage","CheckIcon","VideoAddedMessageWithLogic","previewImage","selectImg","FormHandler","PopupWithLogic","visibility","selectVisibility","videoId","includes","split","ampersandPosition","indexOf","substring"],"sourceRoot":""}